name: CI/CD
on: push
jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-
      - name: Install
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: Lint
        run: yarn lint
      - name: Build
        run: yarn build
      - name: Upload Types
        if: | 
          contains(github.ref, 'refs/heads/next')
          || contains(github.ref, 'refs/heads/master')
          || contains(github.ref, 'refs/heads/next-major')
          || contains(github.ref, 'refs/heads/beta')
        uses: actions/upload-artifact@v1
        with:
          name: types
          path: types
      - name: Upload Build
        if: | 
          contains(github.ref, 'refs/heads/next')
          || contains(github.ref, 'refs/heads/master')
          || contains(github.ref, 'refs/heads/next-major')
          || contains(github.ref, 'refs/heads/beta')
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: build
  
  release:
    name: Release
    needs:
      - test
    if: |
      contains(github.ref, 'refs/heads/next')
      || contains(github.ref, 'refs/heads/master')
      || contains(github.ref, 'refs/heads/next-major')
      || contains(github.ref, 'refs/heads/beta')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Download Build
        uses: actions/download-artifact@v1
        with:
          name: build
      - name: Download Types
        uses: actions/download-artifact@v1
        with:
          name: types
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-
      - name: Install
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: Release
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn release

  notify:
    name: Notify
    runs-on: ubuntu-latest
    if: failure()
    needs:
      - test
      - release
    steps:
      - uses: technote-space/workflow-conclusion-action@v1
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ env.WORKFLOW_CONCLUSION }}
          fields: repo,message,commit,author,action,eventName,ref,workflow
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        if: always()